@use "sass:map";
@use "position.scss";
@use "colors.scss";

@mixin set-keyframes($name, $attrs, $reverse: false) {
  $from: from;
  $to: to;

  @if $reverse {
    $from: to;
    $to: from;
  }

  @keyframes #{$name} {
    #{$from} {
      @each $name, $value in map.get($attrs, "from") {
        #{$name}: #{$value};
      }
    }

    #{$to} {
      @each $name, $value in map.get($attrs, "to") {
        #{$name}: #{$value};
      }
    }
  }
}

%animation-default {
  animation-duration: 0.5s;
  animation-timing-function: ease-in;
}

@mixin set-animation($dur: 0.5s, $timing-func: ease-in, $infinite: false) {
  animation-duration: $dur;
  animation-timing-function: $timing-func;

  @if $infinite {
    animation-iteration-count: infinite;
  }
}

@mixin animate-motion($dur, $motion) {
  @extend %animation-default;

  @if $motion == "left-right" {
    animation-name: left-right;
  } @else if $motion == "right-left" {
    animation-name: right-left;
  } @else if $motion == "top-bottom" {
    animation-name: top-bottom;
  } @else if $motion == "bottom-top" {
    animation-name: bottom-top;
  }
}

@mixin halo($border-radius: 4px) {
  &.rc-halo,
  &.rc-un-halo {
    position: relative;
  }

  &.rc-halo::after {
    @include position.position-abs("center center");
    border: 2px solid rgba(colors.$primary, 0.95);
    border-radius: $border-radius;
    box-shadow: 0 0 1px 5px rgba(colors.$primary, 0.4);
    content: "";
    display: block;
    height: 100%;
    transition: border 0.1s ease-in-out, box-shadow 0.1s ease-in-out;
    width: 100%;
  }

  &.rc-un-halo::after {
    border: 1px solid rgba(colors.$primary, 0.95);
    box-shadow: 0 0 0 1px rgba(colors.$primary, 0.6);
  }
}
