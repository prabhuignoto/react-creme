@use '../../design/core.scss';
@use '../../design/button.scss';
@use '../../design/theme.scss';
@use '../../design/animate.scss';
@use '../../design/position.scss';
@use '../../design/util.scss';

$dark-mode: theme.$dark-mode;

.rc-drawer {
  $min-width: var(--min-width);
  $min-height: var(--min-height);

  $positions: (
    left: 'center left',
    right: 'center right',
    top: 'top center',
    bottom: 'bottom center',
  );

  $slide-left-settings: (
    from: (
      left: util.negative($min-width),
    ),
    to: (
      left: 0,
    ),
  );
  $slide-top-settings: (
    from: (
      top: util.negative($min-height),
    ),
    to: (
      top: 0,
    ),
  );
  $slide-bottom-settings: (
    from: (
      bottom: util.negative($min-height),
    ),
    to: (
      bottom: 0,
    ),
  );
  $slide-right-settings: (
    (
      from: (
        right: util.negative($min-width),
      ),
      to: (
        right: 0,
      ),
    )
  );

  @extend %shadow-small;
  @extend %top-center;
  @include animate.set-settings(0.25s, var(--transition));

  @if $dark-mode == 'true' {
    background-color: theme.$gunmetal-gray;
  } @else {
    background-color: theme.$white;
  }
  height: var(--min-height);
  min-width: $min-width;
  outline: 0;
  position: relative;
  visibility: hidden;

  &.visible {
    visibility: visible;
  }

  @each $position, $val in $positions {
    $slide-settings: ();

    @if $position == top {
      $slide-settings: $slide-top-settings;
    } @else if $position == bottom {
      $slide-settings: $slide-bottom-settings;
    } @else if $position == left {
      $slide-settings: $slide-left-settings;
    } @else if $position == right {
      $slide-settings: $slide-right-settings;
    }

    @include animate.set-keyframes(slide-#{$position}-enter, $slide-settings);

    @include animate.set-keyframes(
      slide-#{$position}-exit,
      $slide-settings,
      true
    );

    &.rc-drawer-#{$position} {
      @include position.position-abs($val);

      @if $position == top or $position == bottom {
        min-width: 100%;
      }
    }

    &.slide-#{$position}-enter {
      animation-name: slide-#{$position}-enter;
      #{$position}: 0;
    }

    &.slide-#{$position}-exit {
      animation-name: slide-#{$position}-exit;

      @if $position == left or $position == right {
        #{$position}: util.negative($min-width);
      } @else {
        #{$position}: util.negative($min-height);
      }
    }
  }
}

.rc-drawer-close-btn-wrapper {
  @include position.position-abs('top right');
  right: 0.5rem;
  top: 0.5rem;
}
