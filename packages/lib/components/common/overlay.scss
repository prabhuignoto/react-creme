@use '../../design/animate.scss';
@use '../../design/button.scss';
@use '../../design/theme.scss';
@use '../../design/layout.scss';
@use '../../design/position.scss';
@use '../../design/icon.scss';

.rc-overlay-wrapper {
  @extend %center;

  left: 0;
  opacity: 1;
  outline: 0;
  overflow: hidden;
  top: 0;
  transition: opacity 0.25s ease;
  z-index: 9999;

  &.rc-overlay-contained {
    height: 100%;
    position: absolute;
    width: 100%;
  }

  &:not(.rc-overlay-contained) {
    height: 100vh;
    overflow: hidden;
    position: fixed;
    width: 100vw;
  }

  &.rc-overlay-hide {
    opacity: 0;
  }
}

.rc-overlay-close-btn {
  @extend %icon-xl;
  @include position.position-abs('top right');
  border-radius: 50%;
  cursor: pointer;
  right: 1.5rem;
  top: 1rem;

  &:hover::after {
    background: rgba($color: #000, $alpha: 0.75);
  }

  &::after {
    @include position.position-abs('center center');
    background: rgba($color: #000, $alpha: 0.5);
    border-radius: 50%;
    content: '';
    display: block;
    height: 120%;
    width: 120%;
    z-index: -1;
  }

  svg {
    color: theme.$white;
  }
}

.rc-overlay-close-btn:hover {
  svg {
    // color: theme.$primary;
  }
}

$open-anime-settings: (
  from: (
    opacity: 0,
  ),
  to: (
    opacity: 1,
  ),
);

$close-anime-settings: (
  from: (
    opacity: 1,
  ),
  to: (
    opacity: 0,
  ),
);

@include animate.set-keyframes(overlay-open, $open-anime-settings);
@include animate.set-keyframes(overlay-close, $close-anime-settings);
