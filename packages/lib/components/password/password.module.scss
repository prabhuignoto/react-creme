@use '@design/core.scss';
@use '@design/icon.scss';
@use '@design/theme.scss';
@use '@design/shadow.scss';
@use '@design/effects.scss';

// Size definitions
$sizes: (
  sm: 1rem,
  md: 2rem,
  lg: 3rem,
);

// Wrapper styles
.wrapper {
  align-items: center;
  display: grid;
  width: 100%;

  // Dark theme styling
  &.dark {
    background: theme.$gunmetal-gray;
  }

  // Light theme styling
  &:not(.dark) {
    background: theme.$light-bg;
    box-shadow: inset 0 0 3px 1px rgba($color: theme.$alto, $alpha: 0.5);
  }

  // Size variations
  @each $key, $val in $sizes {
    $icon-size: calc(var(--rc-icon-size-#{$key}) + 14px);
    &.#{$key} {
      grid-template-columns: calc(100% - $icon-size) $icon-size;
    }
  }

  // Border styling
  &:not(.border) {
    @extend %border-radius;
  }

  &.border {
    @extend %border;
  }

  // RTL direction
  &.RTL {
    direction: rtl;
  }
}

// Input wrapper styling
.input_wrapper {
  align-self: flex-start;
  width: 100%;
}

// Unmask icon styling
.unmask_icon {
  @include effects.halo();
  color: theme.$primary;
  cursor: pointer;
  justify-self: center;
  position: relative;
  z-index: 1;

  // Size variations
  @each $key, $val in $sizes {
    &.#{$key} {
      @extend %icon-#{$key};
    }
  }
}
