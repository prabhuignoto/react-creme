@use '@design/core.scss';
@use '@design/animate.scss';
@use '@design/theme.scss';
@use 'sass:map';

$sizes: (sm, md, lg);

$grid: (
  sm: 16px,
  md: 24px,
  lg: 28px,
);

$heights: (
  sm: 35px,
  md: 40px,
  lg: 45px,
);

.wrapper {
  @extend %left;
  align-items: center;
  cursor: pointer;
  display: grid;
  height: 100%;
  justify-items: center;
  padding: 0.25rem 0;
  padding: 0 0.5rem;
  width: 100%;

  &.rtl {
    direction: rtl;
  }

  &.disabled {
    @extend %disabled;
  }

  @each $key, $val in $grid {
    &.#{$key} {
      display: flex;

      &:not(.auto_height) {
        min-height: map.get($heights, $key);
      }
    }
  }
}

.border {
  &:not(.dark) {
    @extend %border;
  }
}

.hover:hover {
  @extend %border-radius;

  &.dark {
    background-color: theme.$gunmetal-gray;
  }

  &:not(.dark) {
    background: rgba(theme.$secondary-rgb, 0.25);
  }
}

.checkbox {
  @extend %left;
  user-select: none;
  z-index: 1;

  * {
    cursor: pointer;
  }

  &.disabled {
    @extend %disabled;
  }
}

.icon {
  transition: background 0.1s linear;

  &.dark {
    @extend %border-radius;
    background: theme.$charcoal-gray;
  }

  &:not(.dark) {
    @extend %border;
    background: theme.$white;
  }

  &.round {
    border-radius: 50%;
  }

  svg {
    display: none;
  }

  &.checked {
    background: theme.$primary;
  }

  &.checked svg {
    color: theme.$white;
    display: block;
  }
}

.label {
  @extend %text-no-wrap;
  cursor: pointer;
  display: block;
  font-weight: 300;
  padding-left: 0.5rem;
  user-select: none;

  &.dark {
    color: theme.$white;
  }

  &.label_rtl {
    padding-right: 0.5rem;
  }

  @each $key in $sizes {
    &.label_#{$key} {
      @extend %font-#{$key};
    }
  }
}

@each $size in $sizes {
  .#{$size} {
    &.icon {
      @extend %icon-#{$size};
    }
  }
}
